*** Settings ***
Documentation     【作者】ygu
...
...               【说明】
...               定义公告类型选项框对应的字段
Resource          ../../通用/L2-接口层/组合指标.txt
Resource          ../../通用/L2-接口层/接口校验通用.txt
Resource          ../../通用/L2-接口层/接口结果基础校验.txt
Resource          ../../通用/L2-接口层/公告研报字段校验.txt
Resource          ../../通用/L2-接口层/公告研报获取头格式和期望值.txt

*** Variables ***
${first_category}    ${EMPTY}

*** Keywords ***
循环读文件获取指标进行校验
    [Arguments]    ${check_field_list}    ${datasource_path}    ${file}
    #读取文件夹所有包含${file}的文件
    ${filelist}    List Files In Directory    ${datasource_path}    ${file}*.txt
    ${scene}    Set Variable    1
    : FOR    ${filename}    IN    @{filelist}
    \    #读取指标
    \    ${querylist}    读取指标    ${datasource_path}${/}${filename}
    \    循环读指标校验筛选项    ${querylist}    ${check_field_list}

循环读指标校验筛选项
    [Arguments]    ${querylist}    ${check_field_list}
    : FOR    ${query}    IN    @{querylist}
    \    创建Session
    \    公告筛选框校验query    ${query}    ${check_field_list}
    \    删除Sessions

公告筛选框校验query
    [Arguments]    ${multi_query}    ${check_field_list}
    ${passed}    ${responseobj}    ${query}    ${exp_indicators_dict}    公告筛选框语句post请求    ${multi_query}    ${check_field_list}
    Run Keyword If    '${passed}'!='PASS'    append_to_file    ${results_path}${/}${pre_resultfile}error.txt    ${query}\n
    ...    ELSE    公告筛选框校验返回Response结果    ${responseobj}    ${query}    ${exp_indicators_dict}

公告筛选框语句post请求
    [Arguments]    ${multi_query}    ${check_field_list}    ${post_data_dict}=${None}
    ${exp_indicators_dict}    Create Dictionary
    ${data}    Create Dictionary
    ${query_add}    Set Variable    ${EMPTY}
    #将期望的校验结果存入字典中
    ${indicatorlist}    Split String    ${multi_query}    ,
    ${LEN}    Get Length    ${indicatorlist}
    : FOR    ${i}    IN RANGE    ${LEN}
    \    ${dict}    ${expect_list}    Run Keyword If    'industry' in '${check_field_list[${i}]}'    获取行业post的头格式和期望list    ${indicatorlist[${i}]}
    \    ...    ELSE IF    'category' in '${check_field_list[${i}]}'    获取公告类型post的头格式和期望list    ${check_field_list[${i}]}    ${indicatorlist[${i}]}
    \    ...    ELSE IF    'time' in '${check_field_list[${i}]}'    获取时间post的头格式和期望list    ${check_field_list[${i}]}    ${indicatorlist[${i}]}
    \    ...    ELSE    获取单个搜索词post的头格式和期望list    ${check_field_list[${i}]}    ${indicatorlist[${i}]}
    \    ${data}    Evaluate    dict(${data},**${dict})
    \    Set To Dictionary    ${exp_indicators_dict}    ${check_field_list[${i}]}=${expect_list}
    \    ${query_add_temp}    Run Keyword If    'category' in '${check_field_list[${i}]}'    获取结果中类型需要增加的说明    ${dict}
    \    ...    ELSE IF    'time' in '${check_field_list[${i}]}'    获取结果中时间需要增加的说明    ${expect_list}
    \    ...    ELSE    Set Variable    ${EMPTY}
    \    ${query_add}    Run Keyword If    '${query_add_temp}'!='${EMPTY}' and '${query_add}'=='${EMPTY}'    Set Variable    ${query_add_temp}
    \    ...    ELSE IF    '${query_add_temp}'!='${EMPTY}' and '${query_add}'!='${EMPTY}'    Set Variable    ${query_add} ${query_add_temp}
    \    ...    ELSE    Set Variable    ${EMPTY}
    ${query}    Replace String    ${multi_query}    ,    ${SPACE}
    #判断query是否需要补充说明
    ${query}    Run Keyword If    '${query_add}'!='${EMPTY}'    Set Variable    ${query}(${query_add})
    ...    ELSE    Set Variable    ${query}
    #获取左选框post数据
    Should Not Be Empty    ${first_category}
    ${first_category_id}    ${first_category_list}    获取公告左选框类型post和期望值    ${first_category}
    Set To Dictionary    ${data}    first_category=${first_category_id}
    ${check_field_list_str}    Evaluate    ' '.join(${check_field_list})
    Run keyword If    'category' not in '${check_field_list_str}'    Set To Dictionary    ${data}    category=${first_category}
    #增加左选框的期望校验结果,如果含有category则就不用增加期望结果
    Set To Dictionary    ${exp_indicators_dict}    first_category=${first_category_list}
    ${passed}    ${responseobj}    query语句请求    ${data}    ${apiurl_notice}
    [Return]    ${passed}    ${responseobj}    ${query}    ${exp_indicators_dict}

公告筛选框校验返回Response结果
    [Arguments]    ${responseobj}    ${query}    ${exp_indicators_dict}    #返回reponse对象|搜索词| 期望比对结果字典
    ${continue_flag}    ${data}    Response基础校验    ${responseobj}    ${query}
    Run keyword If    ${continue_flag}==1    公告筛选框校验最外部数据    ${data}    ${query}    ${exp_indicators_dict}

公告筛选框校验最外部数据
    [Arguments]    ${data}    ${query}    ${exp_indicators_dict}
    ${keys}    Get Dictionary Keys    ${exp_indicators_dict}
    log    ${keys}
    #校验items数据是否为空
    ${continue_flag_items}    ${items}    获取items数据    ${data}    ${query}
    #不为空
    : FOR    ${key}    IN    @{keys}
    \    log    ${key}
    \    ${filed_list}    Get From Dictionary    ${exp_indicators_dict}    ${key}
    \    log    ${filed_list}
    \    ${continue_flag}    Run keyword If    ${continue_flag_items}!=1    set variable    -1
    \    ...    ELSE IF    '${key}'=='title_include'    校验标题必含    ${query}    ${filed_list}
    \    ...    ${items}
    \    ...    ELSE IF    '${key}'=='title_not_include'    校验标题不含    ${query}    ${filed_list}
    \    ...    ${items}
    \    ...    ELSE IF    'industry' in '${key}' or 'category' in '${key}'    校验category或者industry    ${query}    ${key}
    \    ...    ${filed_list}    ${items}
    \    ...    ELSE IF    'time' in '${key}'    校验时间publish_at    ${query}    ${filed_list}
    \    ...    ${items}
    \    ...    ELSE    set variable    1
    \    Exit for loop If    ${continue_flag}!=1
    Run Keyword If    ${continue_flag}==1    append_to_file    ${results_path}${/}${pre_resultfile}success.txt    ${query}\n
